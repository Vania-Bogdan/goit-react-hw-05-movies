{"version":3,"file":"static/js/248.47ee5b56.chunk.js","mappings":"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","sources":["components/api/movies.js","components/modules/MovieList/MovieList.jsx","components/modules/MovieSearch/MovieSearch.jsx","components/pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '626606dbe7f5835682a8b704b6445e35';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&include_adult=false`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const URL = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US&include_adult=false`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const getMovieCast = async (id) => {\n    const URL = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US&include_adult=false`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const URL = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const searchMovie = async (search) => {\n    const URL = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${search}`;\n    const { data } = await axios.get(URL);\n    return data;\n}","import { Link, useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ items }) => {\n    \n    const location = useLocation()\n    const elements = items.map(({ id, title }) =>\n        <li key={id} className=\"home-film-card\">\n            <Link state={{from: location }} to={`/movies/${id}`} className=\"home-film-link\">{title}</Link>\n        </li>)\n    return (\n        <ul className=\"home-films-list\">\n            {elements}\n        </ul >\n    )\n}\n\nexport default MovieList\n\nMovieList.defaultProps = {\n    items: []\n}","import { useState } from \"react\";\n\nconst MovieSearch = ({onSubmit}) => {\n    const [state, setState] = useState({\n        search: \"\"\n    })\n\n    const handleChange = ({ target }) => {\n        const {name, value} = target\n        setState({\n            ...state,\n            [name]: value, \n        })\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault()\n        onSubmit({ ...state })\n        setState({\n            search: \"\"\n        })\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input name=\"search\" value={state.search} onChange={handleChange} placeholder=\"Search for movies\" required />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default MovieSearch","import MovieSearch from \"components/modules/MovieSearch/MovieSearch\"\n\nimport { useSearchParams } from \"react-router-dom\"\n\nimport { searchMovie } from \"components/api/movies\"\nimport MovieList from \"components/modules/MovieList/MovieList\"\n\nimport { useState, useEffect } from \"react\"\n\nconst MoviesPage = () => {\n\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null\n    })\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const search = searchParams.get(\"search\")\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                }));\n                const data = await searchMovie(search)\n                // console.log(data);\n                setState(prevState => ({\n                    ...prevState,\n                    items: data.results,\n                }))\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false\n                    }\n                })\n            }\n        }\n\n        if (search) {\n            fetchMovies()\n        }\n\n    }, [search])\n\n    const changeSearch = ({ search }) => {\n        setSearchParams({search})\n    }\n\n    const {items} = state\n\n    return (\n        <div className=\"container\">\n            <h1>Search for movies</h1>\n            <MovieSearch onSubmit={changeSearch} />\n            <MovieList items={items} />\n        </div>\n    )\n}\n\nexport default MoviesPage"],"names":["KEY","BASE_URL","getMovies","URL","axios","data","getMovieDetails","id","getMovieCast","getMovieReviews","searchMovie","search","MovieList","items","location","useLocation","elements","map","title","className","state","from","to","defaultProps","onSubmit","useState","setState","e","preventDefault","name","value","onChange","target","placeholder","required","type","loading","error","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","prevState","results"],"sourceRoot":""}