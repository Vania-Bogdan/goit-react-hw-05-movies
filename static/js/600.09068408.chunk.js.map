{"version":3,"file":"static/js/600.09068408.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,+BAEJC,EAAS,mCAAG,+FACfC,EADe,UACNF,EADM,uCACiCD,EADjC,gDAEEI,IAAAA,IAAUD,GAFZ,uBAEbE,EAFa,EAEbA,KAFa,kBAGdA,GAHc,2CAAH,qDAMTC,EAAe,mCAAG,WAAOC,GAAP,kFACrBJ,EADqB,UACZF,EADY,kBACMM,EADN,oBACoBP,EADpB,gDAEJI,IAAAA,IAAUD,GAFN,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,2CAAH,sDAMfG,EAAY,mCAAG,WAAOD,GAAP,kFAClBJ,EADkB,UACTF,EADS,kBACSM,EADT,4BAC+BP,EAD/B,gDAEDI,IAAAA,IAAUD,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,sDAMZI,EAAe,mCAAG,WAAOF,GAAP,kFACrBJ,EADqB,UACZF,EADY,kBACMM,EADN,4BAC4BP,EAD5B,mCAEJI,IAAAA,IAAUD,GAFN,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,2CAAH,sDAMfK,EAAW,mCAAG,WAAOC,GAAP,kFACjBR,EADiB,UACRF,EADQ,iCACyBD,EADzB,4DACgFW,GADhF,SAEAP,IAAAA,IAAUD,GAFV,uBAEfE,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,2CAAH,qD,yHCkCxB,UA3DgB,WACZ,OAA0BO,EAAAA,EAAAA,UAAS,CAC/BC,QAAS,GACTC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAMOV,GAAMW,EAAAA,EAAAA,MAANX,IAEPY,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAEZH,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdP,SAAS,EACTC,MAAO,MAHO,IAFN,UAOON,EAAAA,EAAAA,IAAgBF,GAPvB,OAONF,EAPM,OAQZY,GAAS,SAAAI,GACL,OAAO,kBACAA,GADP,IAEIR,QAASR,EAAKiB,SAErB,IAbW,gDAeZL,GAAS,SAAAI,GAAS,yBACXA,GADW,IAEdN,MAAK,MAFS,IAfN,yBAqBZE,GAAS,SAAAI,GACL,OAAO,kBACAA,GADP,IAEIP,SAAS,GAEhB,IA1BW,4EAAH,qDA6BjBM,GACH,GAAE,CAACH,EAAUV,IAEd,IAAQM,EAAYG,EAAZH,QAEFU,EAAWV,EAAQW,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACzB,2BACI,wBAAKD,KACL,uBAAIC,MAFCnB,EADgB,IAO7B,OACI,wBACKM,EAAQc,OAAS,EAAIJ,GAClB,cAAGK,UAAU,YAAb,iCAGf,C","sources":["components/api/movies.js","components/pages/SingleFilmPage/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '626606dbe7f5835682a8b704b6445e35';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovies = async () => {\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&include_adult=false`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const URL = `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US&include_adult=false`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const getMovieCast = async (id) => {\n    const URL = `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US&include_adult=false`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const URL = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`;\n    const { data } = await axios.get(URL);\n    return data;\n}\n\nexport const searchMovie = async (search) => {\n    const URL = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${search}`;\n    const { data } = await axios.get(URL);\n    return data;\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"components/api/movies\";\n\nconst Reviews = () => {\n    const [state, setState] = useState({\n        reviews: [],\n        loading: false,\n        error: null\n    })\n    \n    const {id} = useParams()\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }));\n                const data = await getMovieReviews(id);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        reviews: data.results\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false\n                    }\n                })\n            }\n        }\n        fetchMovies()\n    }, [setState, id])\n\n    const { reviews } = state\n\n    const elements = reviews.map(({ id, author, content }) => (\n        <li key={id}>\n            <h5>{author}</h5>\n            <p>{content}</p>\n        </li>\n    ));\n    \n    return (\n        <ul>\n            {reviews.length > 0 ? elements :\n                <p className=\"cast-name\">No reviews, sorry.</p>}\n        </ul>\n    )\n}\n\nexport default Reviews"],"names":["KEY","BASE_URL","getMovies","URL","axios","data","getMovieDetails","id","getMovieCast","getMovieReviews","searchMovie","search","useState","reviews","loading","error","state","setState","useParams","useEffect","fetchMovies","prevState","results","elements","map","author","content","length","className"],"sourceRoot":""}